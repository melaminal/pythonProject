import numpy as np

# Установка точности вывода чисел
np.set_printoptions(precision=17, suppress=False)

def interpolate_structure(start_structure, end_structure, num_steps):
    # Интерполяция параметров решетки
    lattice_start = np.array(start_structure['lattice'])
    lattice_end = np.array(end_structure['lattice'])
    lattice_interp = np.linspace(lattice_start, lattice_end, num_steps)

    # Интерполяция координат атомов
    atoms_start = np.array(start_structure['atoms'])
    atoms_end = np.array(end_structure['atoms'])
    atoms_interp = []

    for i in range(num_steps):
        interp_atoms = []
        for start, end in zip(atoms_start, atoms_end):
            delta = end - start
            delta = delta - np.round(delta)  # Учёт PBC
            interpolated_atom = (start + i * delta / (num_steps - 1)) % 1.0
            interp_atoms.append(interpolated_atom)
        atoms_interp.append(interp_atoms)

    interpolated_structures = []

    for i in range(num_steps):
        structure = {
            'lattice': lattice_interp[i].tolist(),
            'atoms': atoms_interp[i]
        }
        interpolated_structures.append(structure)

    return interpolated_structures

def write_poscar(filename, structure):
    with open(filename, 'w') as f:
        f.write("EuTiO3\n")
        f.write("1.0000000\n\n")
        for vec in structure['lattice']:
            f.write("  {:.17f}  {:.17f}  {:.17f}\n".format(*vec))
        f.write("\nEu Ti O\n")
        f.write("4  4  12\n")
        f.write("Direct\n")
        for atom in structure['atoms']:
            f.write("  {:.17f}  {:.17f}  {:.17f}\n".format(*atom))

# Пример использования
start_structure = {
    'lattice': [
        [3.9469772801957097, 3.9469772801957097, 0.0000000000000000],
        [-3.9316673237369755, 3.9316673237369755, 0.0000000000000000],
        [0.0000000000000000, 0.0000000000000000, 7.8483073298255484]
    ],
    'atoms': [
        [0.0019957904561991, 0.0000000000000000, 0.0000000000000000],
        [0.9980042095438009, 0.0000000000000000, 0.5000000000000000],
        [0.4980042095438009, 0.5000000000000000, 0.0000000000000000],
        [0.5019957904561991, 0.5000000000000000, 0.5000000000000000],
        [0.0000000000000000, 0.5000000000000000, 0.2500000000000000],
        [0.0000000000000000, 0.5000000000000000, 0.7500000000000000],
        [0.5000000000000000, 0.0000000000000000, 0.2500000000000000],
        [0.5000000000000000, 0.0000000000000000, 0.7500000000000000],
        [0.7500000000000000, 0.2500000000000000, 0.2720467432207982],
        [0.7500000000000000, 0.2500000000000000, 0.7279532567792018],
        [0.2500000000000000, 0.7500000000000000, 0.2279532567792018],
        [0.2500000000000000, 0.7500000000000000, 0.7720467432207982],
        [0.2500000000000000, 0.2500000000000000, 0.2279532567792018],
        [0.2500000000000000, 0.2500000000000000, 0.7720467432207982],
        [0.7500000000000000, 0.7500000000000000, 0.2720467432207982],
        [0.7500000000000000, 0.7500000000000000, 0.7279532567792018],
        [0.9573174136142413, 0.5000000000000000, 0.0000000000000000],
        [0.0426825863857587, 0.5000000000000000, 0.5000000000000000],
        [0.5426825863857587, 0.0000000000000000, 0.0000000000000000],
        [0.4573174136142413, 0.0000000000000000, 0.5000000000000000]
    ]
}

end_structure = {
    'lattice': [
        [3.9469012383440965, 3.9469012383440965, 0.0000000000000000],
        [-3.9316386319660470, 3.9316386319660470, 0.0000000000000000],
        [0.0000000000000000, 0.0000000000000000, 7.8481750017168048]
    ],
    'atoms': [
        [0.0019794982927053, 0.9995510429290420, 0.0000000000000000],
        [0.9980205017072947, 0.0004489570709580, 0.5000000000000000],
        [0.4980205017072947, 0.4995510429290420, 0.0000000000000000],
        [0.5019794982927053, 0.5004489570709580, 0.5000000000000000],
        [0.0000000000000000, 0.5000000000000000, 0.2500000000000000],
        [0.0000000000000000, 0.5000000000000000, 0.7500000000000000],
        [0.5000000000000000, 0.0000000000000000, 0.2500000000000000],
        [0.5000000000000000, 0.0000000000000000, 0.7500000000000000],
        [0.7493653795526924, 0.2506431881395699, 0.2720279736175897],
        [0.7493653795526924, 0.2506431881395699, 0.7279720263824103],
        [0.2506346204473076, 0.7493568118604301, 0.2279720263824103],
        [0.2506346204473076, 0.7493568118604301, 0.7720279736175897],
        [0.2493653795526924, 0.2493568118604301, 0.2279720263824103],
        [0.2493653795526924, 0.2493568118604301, 0.7720279736175897],
        [0.7506346204473076, 0.7506431881395699, 0.2720279736175897],
        [0.7506346204473076, 0.7506431881395699, 0.7279720263824103],
        [0.9573448622619125, 0.5001343195268433, 0.0000000000000000],
        [0.0426551377380875, 0.4998656804731567, 0.5000000000000000],
        [0.5426551377380875, 0.0001343195268433, 0.0000000000000000],
        [0.4573448622619125, 0.9998656804731567, 0.5000000000000000]
    ]
}

# Интерполяция между структурами
num_steps = 12
interpolated_structures = interpolate_structure(start_structure, end_structure, num_steps)

# Запись интерполированных структур
for i, structure in enumerate(interpolated_structures):
    filename = f"POSCAR_{i+1}.vasp"
    write_poscar(filename, structure)
    print(f"Сохранён файл {filename}")